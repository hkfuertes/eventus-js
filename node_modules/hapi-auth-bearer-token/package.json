{
  "_args": [
    [
      {
        "raw": "hapi-auth-bearer-token@git+https://github.com/hkfuertes/hapi-auth-tokens.git",
        "scope": null,
        "escapedName": "hapi-auth-bearer-token",
        "name": "hapi-auth-bearer-token",
        "rawSpec": "git+https://github.com/hkfuertes/hapi-auth-tokens.git",
        "spec": "git+https://github.com/hkfuertes/hapi-auth-tokens.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:hkfuertes/hapi-auth-tokens.git",
          "sshUrl": "git+ssh://git@github.com/hkfuertes/hapi-auth-tokens.git",
          "httpsUrl": "git+https://github.com/hkfuertes/hapi-auth-tokens.git",
          "gitUrl": "git://github.com/hkfuertes/hapi-auth-tokens.git",
          "shortcut": "github:hkfuertes/hapi-auth-tokens",
          "directUrl": "https://raw.githubusercontent.com/hkfuertes/hapi-auth-tokens/master/package.json"
        }
      },
      "/Volumes/Data/Projects/eventusjs"
    ]
  ],
  "_from": "git+https://github.com/hkfuertes/hapi-auth-tokens.git",
  "_id": "hapi-auth-bearer-token@4.3.1",
  "_inCache": true,
  "_location": "/hapi-auth-bearer-token",
  "_phantomChildren": {},
  "_requested": {
    "raw": "hapi-auth-bearer-token@git+https://github.com/hkfuertes/hapi-auth-tokens.git",
    "scope": null,
    "escapedName": "hapi-auth-bearer-token",
    "name": "hapi-auth-bearer-token",
    "rawSpec": "git+https://github.com/hkfuertes/hapi-auth-tokens.git",
    "spec": "git+https://github.com/hkfuertes/hapi-auth-tokens.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:hkfuertes/hapi-auth-tokens.git",
      "sshUrl": "git+ssh://git@github.com/hkfuertes/hapi-auth-tokens.git",
      "httpsUrl": "git+https://github.com/hkfuertes/hapi-auth-tokens.git",
      "gitUrl": "git://github.com/hkfuertes/hapi-auth-tokens.git",
      "shortcut": "github:hkfuertes/hapi-auth-tokens",
      "directUrl": "https://raw.githubusercontent.com/hkfuertes/hapi-auth-tokens/master/package.json"
    }
  },
  "_requiredBy": [
    "/"
  ],
  "_resolved": "git+https://github.com/hkfuertes/hapi-auth-tokens.git#4c75e011ea2446cdc075c684e2c654d7ee238240",
  "_shasum": "c3704c9e1f6f246371df4ef348340cab3c224e3b",
  "_shrinkwrap": null,
  "_spec": "hapi-auth-bearer-token@git+https://github.com/hkfuertes/hapi-auth-tokens.git",
  "_where": "/Volumes/Data/Projects/eventusjs",
  "author": {
    "name": "John Brett",
    "email": "johnbrett7@gmail.com",
    "url": "https://johnbrett.me"
  },
  "bugs": {
    "url": "https://github.com/johnbrett/hapi-auth-bearer-token/issues"
  },
  "dependencies": {
    "boom": "^4.1.0",
    "hoek": "^4.1.0",
    "joi": "^10.0.0"
  },
  "description": "Simple Bearer authentication scheme plugin for hapi, accepts token by Header, Cookie or Query parameter.",
  "devDependencies": {
    "code": "^4.0.0",
    "hapi": "^16.0.0",
    "lab": "^11.0.0"
  },
  "directories": {
    "test": "test"
  },
  "engines": {
    "node": ">=4.0.0"
  },
  "gitHead": "4c75e011ea2446cdc075c684e2c654d7ee238240",
  "homepage": "https://github.com/johnbrett/hapi-auth-bearer-token",
  "keywords": [
    "hapi",
    "plugin",
    "auth",
    "scheme",
    "bearer",
    "token",
    "cookie",
    "authentication"
  ],
  "license": "MIT",
  "main": "lib/index.js",
  "name": "hapi-auth-bearer-token",
  "optionalDependencies": {},
  "peerDependencies": {
    "hapi": ">=8.x.x"
  },
  "readme": "# hapi auth bearer token\n[![NPM Version](https://img.shields.io/npm/v/hapi-auth-bearer-token.svg)](https://npmjs.org/package/hapi-auth-bearer-token)\n[![Build Status](https://travis-ci.org/johnbrett/hapi-auth-bearer-token.svg?branch=master)](https://travis-ci.org/johnbrett/hapi-auth-bearer-token)\n[![Dependency Status](https://david-dm.org/johnbrett/hapi-auth-bearer-token.svg)](https://david-dm.org/johnbrett/hapi-auth-bearer-token)\n[![Test Coverage](https://codeclimate.com/github/johnbrett/hapi-auth-bearer-token/badges/coverage.svg)](https://codeclimate.com/github/johnbrett/hapi-auth-bearer-token)\n\nLead Maintainer: [John Brett](https://github.com/johnbrett)\n\n[**hapi**](https://github.com/hapijs/hapi) Bearer and Access Token authentication scheme\n\nBearer authentication requires validating a token passed in by either the bearer authorization header, or by an access_token query parameter. The `'bearer-access-token'` scheme takes the following options:\n\n- `validateFunc` - (required) a token lookup and validation function with the signature `function(token, callback)` where:\n    - `token` - the auth token received from the client.\n    - `callback` - a callback function with the signature `function(err, isValid, credentials, artifacts)` where:\n        - `err` - an internal error.\n        - `isValid` - `true` if both the username was found and the password matched, otherwise `false`.\n        - `credentials` - a credentials object passed back to the application in `request.auth.credentials`. Typically, `credentials` are only\n          included when `isValid` is `true`, but there are cases when the application needs to know who tried to authenticate even when it fails\n          (e.g. with authentication mode `'try'`).\n        - `artifacts` - optional [authentication](http://hapijs.com/tutorials/auth) related data that is not part of the user's credential.\n- `options` - (optional)\n    - `accessTokenName` (Default: 'access_token') - Rename the token query/cookie parameter key e.g. 'sample_token_name' would rename the token query parameter to /route1?sample_token_name=12345678.\n    - `allowQueryToken` (Default: true) - Disable accepting token by query parameter, meaning query parameter will not be checked for the authorization token.\n    - `allowCookieToken` (Default: false) - Allow accepting token by cookie parameter, meaning cookies will be checked for authorization token as well as via other methods.\n    - `allowMultipleHeaders` (Default: false) - Allow multiple authorization headers in request, e.g. `Authorization: FD AF6C74D1-BBB2-4171-8EE3-7BE9356EB018; Bearer 12345678`.\n    - `tokenType` (Default: 'Bearer') - Allow custom token type, e.g. `Authorization: Basic 12345678`.\n    - `allowChaining` (Default: false) - Allow attempt of additional authentication strategies.\n\nFor convenience, the `request` object can be accessed from `this` within validateFunc. If you want to use this, you must use the `function` keyword instead of the arrow syntax. This allows some greater flexibility with authentication, such different authentication checks for different routes.\n\n```javascript\nconst Hapi = require('hapi');\nconst AuthBearer = require('hapi-auth-bearer-token');\n\nconst server = new Hapi.Server();\nserver.connection({ port: 8080 });\n\nserver.register(AuthBearer, (err) => {\n\n    server.auth.strategy('simple', 'bearer-access-token', {\n        allowQueryToken: true,              // optional, true by default\n        allowMultipleHeaders: false,        // optional, false by default\n        accessTokenName: 'access_token',    // optional, 'access_token' by default\n        validateFunc: function (token, callback) {\n\n            // For convenience, the request object can be accessed\n            // from `this` within validateFunc.\n            var request = this;\n\n            // Use a real strategy here,\n            // comparing with a token from your database for example\n            if (token === \"1234\") {\n                return callback(null, true, { token: token }, { artifact1: 'an artifact' });\n            }\n\n            return callback(null, false, { token: token }, { artifact1: 'an artifact' });\n        }\n    });\n\n    server.route({\n        method: 'GET',\n        path: '/',\n        config: {\n           auth: 'simple',\n           handler: function (request, reply) {\n\n              return reply('success');\n           }\n        }\n    });\n\n    server.start((err) => {\n\n        if (err) {\n          throw err;\n        }\n        console.log('Server started at: ' + server.info.uri);\n    })\n});\n```\n\nLicense MIT @ John Brett and other contributors 2016\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git://github.com/johnbrett/hapi-auth-bearer-token.git"
  },
  "scripts": {
    "test": "lab -a code -t 100 -L",
    "test-cov-html": "lab -a code -r html -o coverage.html"
  },
  "version": "4.3.1"
}
